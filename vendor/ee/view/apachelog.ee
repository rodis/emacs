[(meta
  (format-version . "0.0.1")
  (view-data-file . "view/views.ee")
  (fields ()))
 [((type . view)
   (name . "by Host")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (list (ee-field 'remote-host r)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Reversed Hostname")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (ee-links-url-to-list (ee-field 'remote-host r)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Request")
   (r-filter . (lambda (r)
    (not (or (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (list (substring (ee-field 'request r) 4 -9)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Referer")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))
             (and ee-textfile-apachelog-referer-filter
                  (string-match ee-textfile-apachelog-referer-filter
                                (ee-field 'referer r)))))))
   (c-path-finder . (lambda (r)
    (list (list (ee-field 'referer r)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by User Agent")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (ee-split-string (ee-field 'user-agent r) " *[();/]+ *"))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Date")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (list (nth 2 (ee-field 'time r)) (nth 1 (ee-field 'time r)) (nth 0 (ee-field 'time r))))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Size")
   (r-filter . (lambda (r)
    (not (or (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (list (ee-field 'bytes-sent r) (substring (ee-field 'request r) 4 -9)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2)
      (cond ((and (numberp (car c1)) (numberp (car c2)))
             (< (car c2) (car c1)))
            ((not (or (numberp (car c1)) (numberp (car c2))))
             (string< (car c1) (car c2)))
            ((numberp (car c2)))))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]
 [((type . view)
   (name . "by Status")
   (r-filter . (lambda (r)
    (not (or (and (ee-field 'request r)
                  (string-match ".\\(gif\\|png\\|css\\)" (ee-field 'request r)))
             (and ee-textfile-apachelog-remotehost-filter
                  (string-match ee-textfile-apachelog-remotehost-filter
                                (ee-field 'remote-host r)))))))
   (c-path-finder . (lambda (r)
    (list (list (ee-field 'status r)))))
   (c-sorter . (lambda (a-level c-level s-level attr-alist)
    (lambda (c1 c2) (string< (car c1) (car c2)))))
   (r-calculator . (lambda (r a-level r-level children-p result) 1))
   (c-counter . (lambda (a-level c-level s-level header attr-alist) 0))
   (r-counter . (lambda (r a-level r-level children-p result) 1))
   (r-title-printer . (lambda () (setq header-line-format "  HOST         TIME                         REQUEST STATUS BYTES-SENT REFERER USER-AGENT LINE")))
   (c-printer . (lambda (a-level c-level s-level header attr-alist)
    (let ((b (point)))
      (insert (format
               (concat "%s- %s (%s)")
               (make-string (1- (+ c-level s-level)) ?\040)
               header
               (or (cadr (assq 'counter attr-alist)) "0")))
      (add-text-properties b (point) (list 'face (ee-c-face c-level))))))
   (r-printer . (lambda (r a-level r-level children-p attr-alist)
    (insert (format "%s" (ee-field 'line r)))))
   (r-execute . ee-textfile-apachelog-execute))]]

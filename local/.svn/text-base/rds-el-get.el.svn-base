;;; rds-el-get --- Package Manager

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil t)
  (url-retrieve
   "https://raw.github.com/dimitri/el-get/master/el-get-install.el"
   (lambda (s)
     (end-of-buffer)
     (eval-print-last-sexp))))


;; local sources
(setq  el-get-sources '(
         ;; (:name magit
         ;;        :after (lambda () 
         ;;                   (global-set-key (kbd "C-x C-z") 'magit-status)))
         (:name emacs-w3m
                :description "A simple Emacs interface to w3m"
                :type emacsmirror
                :url "https://github.com/emacsmirror/w3m.git"
                :build `("autoconf" ("./configure" ,
                        (concat "--with-emacs=" el-get-emacs)) "make")
                :build/windows-nt ("sh /usr/bin/autoconf" 
                                   "sh ./configure" "make")
                :info "doc")
         (:name backup-each-save
                :description "Backup each savepoint of a file"
                :type emacswiki
                :url "http://www.emacswiki.org/emacs-de/download/backup-each-save.el")
         (:name key-chord
                :description "Map pairs of simultaneously pressed keys to commands"
                :type emacswiki
                :url "http://www.emacswiki.org/emacs/download/key-chord.el")
;;         (:name popwin
;;                :description "Popup window manager "
;;                :type emacsmirror
;;                :url "https://github.com/emacsmirror/popwin.git")
        (:name notify
               :description "Notification manager"
               :type emacswiki
               :compile nil)
        (:name python-mode
               :type emacsmirror
               :description "Major mode for editing Python programs"
               :features (python-mode doctest-mode)
               :compile nil
               :load "test/doctest-mode.el"
               :before (lambda () (setq py-install-directory "~/.emacs.d/el-get/python-mode"))
               :post-init (lambda ()
                            (add-to-list 'auto-mode-alist '("\\.py$" . python-mode))
                            (add-to-list 'interpreter-mode-alist '("python" . python-mode))
                            (autoload 'python-mode "python-mode" "Python editing mode." t)))
))

(setq my-packages
      (append
       '(
         el-get 
         switch-window 
         diminish 
         org-mode 
         dired+ 
         escreen 
         anything 
         ;color-theme
         multi-term
         go-mode
         magit
        )

       (mapcar 'el-get-source-name el-get-sources)))

(el-get 'sync my-packages)


(provide 'rds-el-get)
